{"ast":null,"code":"var _jsxFileName = \"/Users/diegocontreras/Documents/coderhouse/clase11/e-commerce/src/context/CartProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [counterCart, setCounterCart] = useState(0);\n  const handleSetCounterCart = number => {\n    setCounterCart(prev => prev + number);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      totalItems: counterCart,\n      addItemsToCart: handleSetCounterCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n// Tip #1 => Crear un custom hook para encapsular la logica\n_s(CartProvider, \"nJwKgQyR0yUJHo4hpUb6q5jQ0xY=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","counterCart","setCounterCart","handleSetCounterCart","number","prev","Provider","value","totalItems","addItemsToCart","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["/Users/diegocontreras/Documents/coderhouse/clase11/e-commerce/src/context/CartProvider.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react'\n\nexport const CartContext = createContext()\n\nconst CartProvider = ({ children }) => {\n  const [counterCart, setCounterCart] = useState(0)\n\n  const handleSetCounterCart = (number) => {\n    setCounterCart(prev => prev + number)\n  }\n\n  return (\n    <CartContext.Provider\n      value={{\n        totalItems: counterCart,\n        addItemsToCart: handleSetCounterCart\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  )\n}\n\n// Tip #1 => Crear un custom hook para encapsular la logica\nexport const useCart = () => useContext(CartContext)\n\nexport default CartProvider\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMS,oBAAoB,GAAIC,MAAM,IAAK;IACvCF,cAAc,CAACG,IAAI,IAAIA,IAAI,GAAGD,MAAM,CAAC;EACvC,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACS,QAAQ;IACnBC,KAAK,EAAE;MACLC,UAAU,EAAEP,WAAW;MACvBQ,cAAc,EAAEN;IAClB,CAAE;IAAAJ,QAAA,EAEDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAb,EAAA,CAnBMF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAoBlB,OAAO,MAAMiB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACI,WAAW,CAAC;AAAA;AAAAmB,GAAA,CAAvCD,OAAO;AAEpB,eAAejB,YAAY;AAAA,IAAAgB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}