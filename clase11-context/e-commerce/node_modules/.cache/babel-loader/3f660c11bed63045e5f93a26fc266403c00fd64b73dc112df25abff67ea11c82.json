{"ast":null,"code":"var _jsxFileName = \"/Users/diegocontreras/Documents/e-commerce/src/App.js\",\n  _s = $RefreshSig$();\nimport ItemListContainer from \"components/ItemListContainer\";\nimport NavBar from \"components/Navbar\";\nimport { getProducts } from \"mock\";\nimport { useEffect, useState } from \"react\";\n\n//useState\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Test {\n  constructor(user) {\n    this.user = user;\n  }\n  getUser() {\n    return this.user;\n  }\n}\nfunction App() {\n  _s();\n  //number\n  //const [valor, setValor] = useState(2)\n\n  //string\n  //const [valor, setValor] = useState('')\n\n  //array\n  //const [valor, setValor] = useState([])\n\n  //object\n  //const [loading, setLoading] = useState(false)\n  //const [error, setError] = useState(null)\n  //const [products, setProducts] = useState([])\n\n  // const [response, setResponse] = useState({\n  //   loading: false,\n  //   error: null,\n  //   products: []\n  // })\n\n  // const [filters, setFilters] = useState({\n  //   query: {\n  //     name: '',\n  //     age: '',\n  //     date: ''\n  //   },\n  //   page: 1,\n  //   items: 10\n  // })\n\n  //formularios\n  // const [form, setForm] = useState({\n  //   username: '',\n  //   password: ''\n  // })\n\n  const [valor, setValor] = useState(0);\n  useEffect(() => {\n    const user = new Test('diego');\n    console.log(user.getUser());\n    //setLoading(true)\n    //setError(null)\n\n    // setResponse(prevResponse => ({\n    //   ...prevResponse,\n    //    loading: true,\n    //   error: null, \n    //   }))\n\n    // getProducts()\n    // .then((products) =>  {\n    //   setResponse(prevResponse => ({\n    //     ...prevResponse,\n    //     loading: false,\n    //     products, \n    //    }))\n    // } )\n    // .catch(error => {\n    //   setResponse({\n    //     loading: false,\n    //     error,\n    //     products: []\n    //   })\n    // })\n  }, []);\n  const handleChange = () => {\n    // Esta forma se usa cuando no dependemos del mismo estado para cambiar el valor\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n\n    // Esta forma se usa cuando no tenemos una dependencia del mismo estado para cambiar el valor\n    // setValor((currentState) => {\n    //   // todo lo que quieran \n    //  const nuevoValor =  currentState * 2\n    // return nuevoValor\n    // })\n\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n\n    //Para array y para objetos \n\n    setValor(prev => prev + 1);\n  };\n\n  // const {loading, error, products} = response\n\n  // if(loading) return <p>Cargando...</p>\n\n  // if(error) return <p>{error}</p>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChange,\n      className: \"bg-red-400 rounded-sm px-4 py-1\",\n      children: \"Change state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"khwp1HfHxibkJxE6KyVW4VId3dM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ItemListContainer","NavBar","getProducts","useEffect","useState","jsxDEV","_jsxDEV","Test","constructor","user","getUser","App","_s","valor","setValor","console","log","handleChange","prev","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/diegocontreras/Documents/e-commerce/src/App.js"],"sourcesContent":["import ItemListContainer from \"components/ItemListContainer\";\nimport NavBar from \"components/Navbar\";\nimport { getProducts } from \"mock\";\n\nimport { useEffect, useState } from \"react\";\n\n//useState\n\nclass Test {\n  constructor(user){\n    this.user = user\n  }\n\n  getUser() {\n    return this.user\n  }\n}\n\nfunction App() {\n\n  //number\n  //const [valor, setValor] = useState(2)\n\n  //string\n  //const [valor, setValor] = useState('')\n\n  //array\n  //const [valor, setValor] = useState([])\n\n\n  //object\n   //const [loading, setLoading] = useState(false)\n   //const [error, setError] = useState(null)\n   //const [products, setProducts] = useState([])\n\n  // const [response, setResponse] = useState({\n  //   loading: false,\n  //   error: null,\n  //   products: []\n  // })\n\n  // const [filters, setFilters] = useState({\n  //   query: {\n  //     name: '',\n  //     age: '',\n  //     date: ''\n  //   },\n  //   page: 1,\n  //   items: 10\n  // })\n\n\n  //formularios\n  // const [form, setForm] = useState({\n  //   username: '',\n  //   password: ''\n  // })\n\n  const [valor, setValor] = useState(0)\n\n  \n\n  useEffect(() => {\n\n    const user = new Test('diego')\nconsole.log(user.getUser())\n  //setLoading(true)\n   //setError(null)\n  \n\n    // setResponse(prevResponse => ({\n    //   ...prevResponse,\n    //    loading: true,\n    //   error: null, \n    //   }))\n\n    // getProducts()\n    // .then((products) =>  {\n    //   setResponse(prevResponse => ({\n    //     ...prevResponse,\n    //     loading: false,\n    //     products, \n    //    }))\n    // } )\n    // .catch(error => {\n    //   setResponse({\n    //     loading: false,\n    //     error,\n    //     products: []\n    //   })\n    // })\n\n    \n  }, [])\n\n  const handleChange = () => {\n    // Esta forma se usa cuando no dependemos del mismo estado para cambiar el valor\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n\n\n     // Esta forma se usa cuando no tenemos una dependencia del mismo estado para cambiar el valor\n    // setValor((currentState) => {\n    //   // todo lo que quieran \n    //  const nuevoValor =  currentState * 2\n    // return nuevoValor\n    // })\n\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n\n\n    //Para array y para objetos \n\n   setValor(prev => prev + 1)\n  }\n\n\n  // const {loading, error, products} = response\n\n  // if(loading) return <p>Cargando...</p>\n\n  // if(error) return <p>{error}</p>\n\n\n\n  return (\n    <div>\n      <button onClick={handleChange} className=\"bg-red-400 rounded-sm px-4 py-1\">\n        Change state \n      </button>\n    {/* <NavBar />\n    <ItemListContainer greeting='Aun no hay registros' /> */}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,MAAM;AAElC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,CAAC;EACTC,WAAWA,CAACC,IAAI,EAAC;IACf,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAC,OAAOA,CAAA,EAAG;IACR,OAAO,IAAI,CAACD,IAAI;EAClB;AACF;AAEA,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA;;EAEA;EACA;;EAEA;EACA;;EAGA;EACC;EACA;EACA;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAIrCD,SAAS,CAAC,MAAM;IAEd,MAAMM,IAAI,GAAG,IAAIF,IAAI,CAAC,OAAO,CAAC;IAClCQ,OAAO,CAACC,GAAG,CAACP,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;IACzB;IACC;;IAGC;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAGF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA;IACA;IACA;;IAGC;IACD;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAGA;;IAEDH,QAAQ,CAACI,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAC3B,CAAC;;EAGD;;EAEA;;EAEA;;EAIA,oBACEZ,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAQc,OAAO,EAAEH,YAAa;MAACI,SAAS,EAAC,iCAAiC;MAAAF,QAAA,EAAC;IAE3E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGN,CAAC;AAEV;AAACb,EAAA,CAzHQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AA2HZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}