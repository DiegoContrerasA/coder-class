{"ast":null,"code":"var _jsxFileName = \"/Users/diegocontreras/Documents/e-commerce/src/App.js\",\n  _s = $RefreshSig$();\nimport ItemListContainer from \"components/ItemListContainer\";\nimport NavBar from \"components/Navbar\";\nimport { getProducts } from \"mock\";\nimport { useEffect, useState } from \"react\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\n//useState\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //number\n  //const [valor, setValor] = useState(2)\n\n  //string\n  //const [valor, setValor] = useState('')\n\n  //array\n  //const [valor, setValor] = useState([])\n\n  //object\n  //const [loading, setLoading] = useState(false)\n  //const [error, setError] = useState(null)\n  //const [products, setProducts] = useState([])\n\n  const [response, setResponse] = useState({\n    loading: false,\n    error: null,\n    products: []\n  });\n  useEffect(() => {\n    //setLoading(true)\n    //setError(null)\n\n    setResponse(prevResponse => ({\n      loading: true,\n      error: null,\n      ...prevResponse\n    }));\n    getProducts().then(products => {\n      setResponse(prevResponse => ({\n        loading: false,\n        products,\n        ...prevResponse\n      }));\n    }).catch(error => {\n      setResponse({\n        loading: false,\n        error,\n        products: []\n      });\n    });\n  }, []);\n  const handleChange = () => {\n    // Esta forma se usa cuando no dependemos del mismo estado para cambiar el valor\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n\n    // Esta forma se usa cuando no tenemos una dependencia del mismo estado para cambiar el valor\n    // setValor((currentState) => {\n    //   // todo lo que quieran \n    //  const nuevoValor =  currentState * 2\n    // return nuevoValor\n    // })\n\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n\n    //Para array y para objetos \n\n    //setValor({})\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChange,\n      className: \"bg-red-400 rounded-sm px-4 py-1\",\n      children: \"Change state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), JSON.stringify(products)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ljidI/CsjpsDVRc7gCdCEOVU/LY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ItemListContainer","NavBar","getProducts","useEffect","useState","unstable_batchedUpdates","jsxDEV","_jsxDEV","App","_s","response","setResponse","loading","error","products","prevResponse","then","catch","handleChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/diegocontreras/Documents/e-commerce/src/App.js"],"sourcesContent":["import ItemListContainer from \"components/ItemListContainer\";\nimport NavBar from \"components/Navbar\";\nimport { getProducts } from \"mock\";\n\nimport { useEffect, useState } from \"react\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\n//useState\n\nfunction App() {\n\n  //number\n  //const [valor, setValor] = useState(2)\n\n  //string\n  //const [valor, setValor] = useState('')\n\n  //array\n  //const [valor, setValor] = useState([])\n\n\n  //object\n   //const [loading, setLoading] = useState(false)\n   //const [error, setError] = useState(null)\n   //const [products, setProducts] = useState([])\n\n  const [response, setResponse] = useState({\n    loading: false,\n    error: null,\n    products: []\n  })\n\n\n\n  useEffect(() => {\n\n    \n  //setLoading(true)\n   //setError(null)\n \n\n  \n\n    setResponse(prevResponse => ({\n       loading: true,\n      error: null, \n      ...prevResponse}))\n\n    getProducts()\n    .then((products) =>  {\n      setResponse(prevResponse => ({\n        loading: false,\n        products, \n       ...prevResponse}))\n    } )\n    .catch(error => {\n      setResponse({\n        loading: false,\n        error,\n        products: []\n      })\n    })\n    \n  }, [])\n\n  const handleChange = () => {\n    // Esta forma se usa cuando no dependemos del mismo estado para cambiar el valor\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n    // setValor(valor * 2)\n\n\n     // Esta forma se usa cuando no tenemos una dependencia del mismo estado para cambiar el valor\n    // setValor((currentState) => {\n    //   // todo lo que quieran \n    //  const nuevoValor =  currentState * 2\n    // return nuevoValor\n    // })\n\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n    // setValor((valor) => valor * 2)\n\n\n    //Para array y para objetos \n\n   //setValor({})\n  }\n\n\n  if(loading) return <p>Cargando...</p>\n\n  if(error) return <p>{error}</p>\n\n\n\n  return (\n    <div>\n      <button onClick={handleChange} className=\"bg-red-400 rounded-sm px-4 py-1\">\n        Change state \n      </button>\n      {JSON.stringify(products)}\n    {/* <NavBar />\n    <ItemListContainer greeting='Aun no hay registros' /> */}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,MAAM;AAElC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,uBAAuB,QAAQ,WAAW;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA;;EAEA;EACA;;EAEA;EACA;;EAGA;EACC;EACA;EACA;;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAIFX,SAAS,CAAC,MAAM;IAGhB;IACC;;IAKCQ,WAAW,CAACI,YAAY,KAAK;MAC1BH,OAAO,EAAE,IAAI;MACdC,KAAK,EAAE,IAAI;MACX,GAAGE;IAAY,CAAC,CAAC,CAAC;IAEpBb,WAAW,CAAC,CAAC,CACZc,IAAI,CAAEF,QAAQ,IAAM;MACnBH,WAAW,CAACI,YAAY,KAAK;QAC3BH,OAAO,EAAE,KAAK;QACdE,QAAQ;QACT,GAAGC;MAAY,CAAC,CAAC,CAAC;IACrB,CAAE,CAAC,CACFE,KAAK,CAACJ,KAAK,IAAI;MACdF,WAAW,CAAC;QACVC,OAAO,EAAE,KAAK;QACdC,KAAK;QACLC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA;IACA;IACA;;IAGC;IACD;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAGA;;IAED;EAAA,CACA;EAGD,IAAGN,OAAO,EAAE,oBAAOL,OAAA;IAAAY,QAAA,EAAG;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAErC,IAAGV,KAAK,EAAE,oBAAON,OAAA;IAAAY,QAAA,EAAIN;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAI/B,oBACEhB,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAQiB,OAAO,EAAEN,YAAa;MAACO,SAAS,EAAC,iCAAiC;MAAAN,QAAA,EAAC;IAE3E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRG,IAAI,CAACC,SAAS,CAACb,QAAQ,CAAC;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGtB,CAAC;AAEV;AAACd,EAAA,CAnGQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAqGZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}